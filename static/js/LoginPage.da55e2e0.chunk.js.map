{"version":3,"file":"static/js/LoginPage.da55e2e0.chunk.js","mappings":"kOACA,GAAiB,E,UCkFjB,EA7E0B,WACxB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAAcC,SAGzBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,IAAMC,EAAQD,EAAIE,OAEH,SAAfD,EAAMb,MAAmBC,EAAQY,EAAME,OACxB,UAAfF,EAAMb,MAAoBG,EAASU,EAAME,OAC1B,aAAfF,EAAMb,MAAuBK,EAAYQ,EAAME,MAChD,EAgBD,OACE,4BACE,eAAIC,UAAWC,EAAAA,MAAf,SAA2C,WAAbX,EAAwB,QAAU,aAChE,kBAAMU,UAAWC,EAAAA,SAAiBC,SAjBjB,SAAAN,GAGnB,GAFAA,EAAIO,iBAEa,YAAbb,EAAwB,CAC1B,GAAa,KAATN,GAAyB,KAAVE,GAA6B,KAAbE,EAAiB,OACpDK,GAASW,EAAAA,EAAAA,IAAgB,CAAEpB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IACzC,CAED,GAAiB,WAAbE,EAAuB,CACzB,GAAc,KAAVJ,GAA6B,KAAbE,EAAiB,OACrCK,GAASY,EAAAA,EAAAA,IAAe,CAAEnB,MAAAA,EAAOE,SAAAA,IAClC,CACF,EAKG,UACgB,YAAbE,IACC,mBAAOU,UAAWC,EAAAA,MAAlB,kBAEE,kBACED,UAAWC,EAAAA,MACXK,KAAK,OACLtB,KAAK,OACLe,MAAOf,EACPuB,SAAUZ,QAIhB,mBAAOK,UAAWC,EAAAA,MAAlB,mBAEE,kBACED,UAAWC,EAAAA,MACXK,KAAK,OACLtB,KAAK,QACLe,MAAOb,EACPsB,YAAY,mBACZD,SAAUZ,QAGd,mBAAOK,UAAWC,EAAAA,MAAlB,sBAEE,kBACED,UAAWC,EAAAA,MACXK,KAAK,WACLtB,KAAK,WACLe,MAAOX,EACPmB,SAAUZ,QAGd,mBAAQK,UAAWC,EAAAA,IAAYK,KAAK,SAApC,SACgB,YAAbhB,EAAyB,QAAU,iBAK7C,C,sDC3ED,UAJkB,WAChB,OAAO,SAAC,IAAD,GACR,C","sources":["components/Authorization/Authorization.module.css","components/Authorization/Authorization.jsx","pages/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { userSignUpThunk, userLoginThunk } from 'redux/authorization/authorization-operations';\nimport styles from './Authorization.module.css';\n\nconst AuthorizationForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const location = useLocation().pathname;\n  //   const error = useSelector(getStateError);\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = evt => {\n    const input = evt.target;\n\n    input.name === 'name' && setName(input.value);\n    input.name === 'email' && setEmail(input.value);\n    input.name === 'password' && setPassword(input.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (location === '/signUp') {\n      if (name === '' || email === '' || password === '') return;\n      dispatch(userSignUpThunk({ name, email, password }));\n    }\n\n    if (location === '/login') {\n      if (email === '' || password === '') return;\n      dispatch(userLoginThunk({ email, password }));\n    }\n  };\n\n  return (\n    <div>\n      <h2 className={styles.title}>{location === '/login' ? 'Login' : 'Sign Up'}</h2>\n      <form className={styles.authForm} onSubmit={handleSubmit}>\n        {location === '/signUp' && (\n          <label className={styles.label}>\n            Name\n            <input\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChangeInput}\n            />\n          </label>\n        )}\n        <label className={styles.label}>\n          Email\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            placeholder=\"example@mail.com\"\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={styles.label}>\n          Password\n          <input\n            className={styles.input}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          {location !== '/signUp' ? 'Login' : 'Sign Up'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AuthorizationForm;\n","import AuthorizationForm from 'components/Authorization';\n\nconst LoginPage = () => {\n  return <AuthorizationForm />;\n};\n\nexport default LoginPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","location","useLocation","pathname","dispatch","useDispatch","handleChangeInput","evt","input","target","value","className","styles","onSubmit","preventDefault","userSignUpThunk","userLoginThunk","type","onChange","placeholder"],"sourceRoot":""}