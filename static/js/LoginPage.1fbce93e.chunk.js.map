{"version":3,"file":"static/js/LoginPage.1fbce93e.chunk.js","mappings":"8PACA,EAAiC,sCAAjC,EAA+E,6BAA/E,EAAwJ,4BAAxJ,EAA4L,6BAA5L,EAA0O,sCAA1O,EAAwR,6B,UCyKxR,EAlK0B,WACxB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAAcC,SACzBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAC,GAAiC,IAAD,IAA9BC,OAAUf,EAAoB,EAApBA,KAAMgB,EAAc,EAAdA,MAC3C,OAAQhB,GACN,IAAK,OACH,OAAOC,EAAQe,GACjB,IAAK,QACH,OAAOb,EAASa,GAClB,IAAK,WACH,OAAOX,EAAYW,GACrB,QACE,OAEL,EAqBKC,EAAc,CAClB,2BAA4B,CAC1B,eAAgB,CACdC,YAAa,EACbC,YAAa,8BAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,aAoBnB,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACgB,WAAbZ,EAAwB,uBAAyB,+BAGpD,kBAAMW,UAAWC,EAAaC,SAvDb,SAAAC,GAGnB,GAFAA,EAAIC,iBAEa,YAAbf,EAAwB,CAC1B,GAAa,KAATT,GAAyB,KAAVE,GAA6B,KAAbE,EAAiB,OACpDQ,GAASa,EAAAA,EAAAA,IAAgB,CAAEzB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACxCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,CAED,GAAiB,WAAbI,EAAuB,CACzB,GAAc,KAAVP,GAA6B,KAAbE,EAAiB,OACrCQ,GAASc,EAAAA,EAAAA,IAAe,CAAExB,MAAAA,EAAOE,SAAAA,KACjCD,EAAS,IACTE,EAAY,GACb,CACF,EAsCyDsB,aAAa,MAAnE,UACgB,YAAblB,IACC,SAACmB,EAAA,EAAD,CACER,UAAWC,EACXQ,MAAM,OACNC,QAAQ,WACRC,KAAK,OACL/B,KAAK,OACLgB,MAAOhB,EACPgC,SAAUlB,EACVmB,YAAY,eACZC,UAAQ,EACRC,GAAIlB,EACJmB,WAAY,CACVC,MAAO,CACLC,SAAU,GACVC,OAAQ,EACRC,WAAY,IACZC,MAAO,+BAGXC,gBAAiB,CACfL,MAAO,CAAEC,SAAU,GAAIE,WAAY,IAAKC,MAAO,kCAKrD,SAACb,EAAA,EAAD,CACER,UAAWC,EACXQ,MAAM,QACNC,QAAQ,WACRC,KAAK,QACL/B,KAAK,QACLgB,MAAOd,EACP8B,SAAUlB,EACVmB,YAAY,mBACZC,UAAQ,EACRC,GAAIlB,EACJmB,WAAY,CACVC,MAAO,CACLC,SAAU,GACVC,OAAQ,EACRC,WAAY,IACZC,MAAO,+BAGXC,gBAAiB,CACfL,MAAO,CAAEC,SAAU,GAAIE,WAAY,IAAKC,MAAO,kCAInD,SAACb,EAAA,EAAD,CACER,UAAWC,EACXQ,MAAM,WACNC,QAAQ,WACRC,KAAK,WACL/B,KAAK,WACLgB,MAAOZ,EACP4B,SAAUlB,EACVmB,YAAY,wCACZC,UAAQ,EACRC,GAAIlB,EACJmB,WAAY,CACVC,MAAO,CAAEC,SAAU,GAAIE,WAAY,IAAKC,MAAO,8BAC/CE,QAAS,qCAEXD,gBAAiB,CACfL,MAAO,CAAEC,SAAU,GAAIE,WAAY,IAAKC,MAAO,kCAGnD,SAACG,EAAA,EAAD,CAAQb,KAAK,SAASD,QAAQ,WAAWK,GA3F9B,CACfG,SAAU,GACVE,WAAY,IACZK,cAAe,EACf3B,YAAa,EACb4B,gBAAiB,cACjB3B,YAAa,wBACbsB,MAAO,wBACP,UAAW,CACTtB,YAAa,UACbsB,MAAO,UACPvB,YAAa,IAgFX,SACgB,WAAbT,EAAwB,QAAU,aAErC,gBAAKW,UAAWC,EAAhB,SACGf,IACC,cAAGc,UAAWC,EAAd,SACgB,WAAbZ,EAAwB,+BAAiC,qCAOvE,C,sDClKD,UAJkB,WAChB,OAAO,SAAC,IAAD,GACR,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Authorization/Authorization.module.css?3b20","components/Authorization/Authorization.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"Authorization_loginContainer__gQbSk\",\"title\":\"Authorization_title__sA+VF\",\"shine\":\"Authorization_shine__q0V0K\",\"form\":\"Authorization_form__Qy2Ey\",\"input\":\"Authorization_input__Tynwn\",\"errorContainer\":\"Authorization_errorContainer__ME3Yq\",\"error\":\"Authorization_error__EQ2fn\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { TextField, Button } from '@mui/material';\nimport { userSignUpThunk, userLoginThunk } from 'redux/authorization/authorization-operations';\nimport { getUserError } from 'redux/authorization/authorization-selectors';\nimport styles from './Authorization.module.css';\n\nconst AuthorizationForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const error = useSelector(getUserError);\n  const location = useLocation().pathname;\n  const dispatch = useDispatch();\n\n  const handleChangeInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (location === '/signup') {\n      if (name === '' || email === '' || password === '') return;\n      dispatch(userSignUpThunk({ name, email, password }));\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n\n    if (location === '/login') {\n      if (email === '' || password === '') return;\n      dispatch(userLoginThunk({ email, password }));\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  const textFieldSX = {\n    '& .MuiOutlinedInput-root': {\n      '& > fieldset': {\n        borderWidth: 2,\n        borderColor: 'rgba(255, 255, 255, 0.676)',\n      },\n      '&:hover fieldset': {\n        borderColor: '#acfc00',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#acfc00',\n      },\n    },\n  };\n\n  const buttonSX = {\n    fontSize: 17,\n    fontWeight: 700,\n    letterSpacing: 1,\n    borderWidth: 2,\n    backgroundColor: 'transparent',\n    borderColor: 'rgba(0, 21, 255, 0.5)',\n    color: 'rgba(0, 21, 255, 0.5)',\n    '&:hover': {\n      borderColor: '#acfc00',\n      color: '#acfc00',\n      borderWidth: 2,\n    },\n  };\n\n  return (\n    <div className={styles.loginContainer}>\n      <h2 className={styles.title}>\n        {location === '/login' ? \"Let's login to start\" : \"Let's create your account\"}\n      </h2>\n\n      <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        {location === '/signup' && (\n          <TextField\n            className={styles.input}\n            label=\"Name\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChangeInput}\n            placeholder=\"Name Surname\"\n            required\n            sx={textFieldSX}\n            inputProps={{\n              style: {\n                fontSize: 17,\n                margin: 0,\n                fontWeight: 700,\n                color: 'rgba(255, 255, 255, 0.676)',\n              },\n            }}\n            InputLabelProps={{\n              style: { fontSize: 15, fontWeight: 700, color: 'rgba(255, 255, 255, 0.676)' },\n            }}\n          />\n        )}\n\n        <TextField\n          className={styles.input}\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChangeInput}\n          placeholder=\"example@mail.com\"\n          required\n          sx={textFieldSX}\n          inputProps={{\n            style: {\n              fontSize: 17,\n              margin: 0,\n              fontWeight: 700,\n              color: 'rgba(255, 255, 255, 0.676)',\n            },\n          }}\n          InputLabelProps={{\n            style: { fontSize: 15, fontWeight: 700, color: 'rgba(255, 255, 255, 0.676)' },\n          }}\n        />\n\n        <TextField\n          className={styles.input}\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChangeInput}\n          placeholder=\"at least 8 chars, numbers and letters\"\n          required\n          sx={textFieldSX}\n          inputProps={{\n            style: { fontSize: 17, fontWeight: 700, color: 'rgba(255, 255, 255, 0.676)' },\n            pattern: '(?=.*d)(?=.*[a-z])(?=.*[A-Z]){8,}',\n          }}\n          InputLabelProps={{\n            style: { fontSize: 15, fontWeight: 700, color: 'rgba(255, 255, 255, 0.676)' },\n          }}\n        />\n        <Button type=\"submit\" variant=\"outlined\" sx={buttonSX}>\n          {location === '/login' ? 'Login' : 'Sign Up'}\n        </Button>\n        <div className={styles.errorContainer}>\n          {error && (\n            <p className={styles.error}>\n              {location !== '/login' ? ' Incorrect email or password' : 'This email is alredy used'}\n            </p>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AuthorizationForm;\n","import AuthorizationForm from 'components/Authorization';\n\nconst LoginPage = () => {\n  return <AuthorizationForm />;\n};\n\nexport default LoginPage;\n\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { userLoginThunk } from 'redux/authorization/authorization-operations';\n\n// import styles from './LoginPage.module.css';\n// import { TextField, Button } from '@mui/material';\n\n// export default function LoginPage() {\n//   const dispatch = useDispatch();\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleChange = ({ target: { name, value } }) => {\n//     switch (name) {\n//       case 'email':\n//         return setEmail(value);\n//       case 'password':\n//         return setPassword(value);\n//       default:\n//         return;\n//     }\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(userLoginThunk({ email, password }));\n//   };\n\n//   const textFieldSX = {\n//     '& .MuiOutlinedInput-root': {\n//       '& > fieldset': {\n//         borderWidth: 2,\n//         borderColor: 'rgba(255, 255, 255, 0.676)',\n//       },\n//       '&:hover fieldset': {\n//         borderColor: '#acfc00',\n//       },\n//       '&.Mui-focused fieldset': {\n//         borderColor: '#acfc00',\n//       },\n//     },\n//   };\n\n//   const buttonSX = {\n//     fontSize: 17,\n//     fontWeight: 700,\n//     letterSpacing: 1,\n//     borderWidth: 2,\n//     backgroundColor: 'transparent',\n//     borderColor: 'rgba(0, 21, 255, 0.5)',\n//     color: 'rgba(0, 21, 255, 0.5)',\n//     '&:hover': {\n//       borderColor: '#acfc00',\n//       color: '#acfc00',\n//       borderWidth: 2,\n//     },\n//   };\n\n//   return (\n//     <div className={styles.loginContainer}>\n//       <h1 className={styles.title}>Let's login to start</h1>\n\n//       <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n//         <TextField\n//           className={styles.input}\n//           label=\"Email\"\n//           variant=\"outlined\"\n//           type=\"email\"\n//           name=\"email\"\n//           value={email}\n//           onChange={handleChange}\n//           required\n//           sx={textFieldSX}\n//           inputProps={{\n//             style: {\n//               fontSize: 17,\n//               margin: 0,\n//               fontWeight: 700,\n//               color: 'rgba(255, 255, 255, 0.676)',\n//             },\n//           }}\n//           InputLabelProps={{\n//             style: { fontSize: 15, fontWeight: 700, color: 'rgba(255, 255, 255, 0.676)' },\n//           }}\n//         />\n\n//         <TextField\n//           className={styles.input}\n//           label=\"Password\"\n//           variant=\"outlined\"\n//           type=\"password\"\n//           name=\"password\"\n//           value={password}\n//           onChange={handleChange}\n//           required\n//           sx={textFieldSX}\n//           inputProps={{\n//             style: { fontSize: 17, fontWeight: 700, color: 'rgba(255, 255, 255, 0.676)' },\n//           }}\n//           InputLabelProps={{\n//             style: { fontSize: 15, fontWeight: 700, color: 'rgba(255, 255, 255, 0.676)' },\n//           }}\n//         />\n\n//         <Button type=\"submit\" variant=\"outlined\" sx={buttonSX}>\n//           Login\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// }\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","error","useSelector","getUserError","location","useLocation","pathname","dispatch","useDispatch","handleChangeInput","target","value","textFieldSX","borderWidth","borderColor","className","styles","onSubmit","evt","preventDefault","userSignUpThunk","userLoginThunk","autoComplete","TextField","label","variant","type","onChange","placeholder","required","sx","inputProps","style","fontSize","margin","fontWeight","color","InputLabelProps","pattern","Button","letterSpacing","backgroundColor"],"sourceRoot":""}